{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Container, WalletList, WalletItem, WalletIcon, WalletLabel, } from './styles';\nimport { PageContent, ModalContent } from '../../Common/Modal/styles';\nimport { useContext } from '../../ConnectKit';\nimport { useWalletConnectModal } from '../../../hooks/useWalletConnectModal';\nimport CopyToClipboard from '../../Common/CopyToClipboard';\nimport useLocales from '../../../hooks/useLocales';\nimport { Spinner } from '../../Common/Spinner';\nimport { ScrollArea } from '../../Common/ScrollArea';\nimport { useWeb3 } from '../../contexts/web3';\nimport { useWallets } from '../../../wallets/useWallets';\nimport { walletConfigs, } from '../../../wallets/walletConfigs';\nconst MoreIcon = (_jsx(\"svg\", { width: \"60\", height: \"60\", viewBox: \"0 0 60 60\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M30 42V19M19 30.5H42\", stroke: \"var(--ck-body-color-muted)\", strokeWidth: \"3\", strokeLinecap: \"round\" }) }));\nconst MobileConnectors = () => {\n    var _a, _b;\n    const context = useContext();\n    const locales = useLocales();\n    const { connect: { getUri }, } = useWeb3();\n    const wcUri = getUri();\n    const { open: openW3M, isOpen: isOpenW3M } = useWalletConnectModal();\n    const wallets = useWallets();\n    // filter out installed wallets\n    const walletsIdsToDisplay = (_a = Object.keys(walletConfigs).filter((walletId) => {\n        const wallet = walletConfigs[walletId];\n        if (wallets.find((w) => w.connector.id === walletId))\n            return false;\n        if (!wallet.getWalletConnectDeeplink)\n            return false;\n        return true;\n    })) !== null && _a !== void 0 ? _a : [];\n    const connectWallet = (wallet) => {\n        var _a;\n        const uri = (_a = wallet.getWalletConnectDeeplink) === null || _a === void 0 ? void 0 : _a.call(wallet, wcUri);\n        console.log('wallet uri', uri);\n        if (uri)\n            window.location.href = uri;\n        // test\n        //if (uri) window.open(uri, '_blank');\n    };\n    return (_jsx(PageContent, { style: { width: 312 }, children: _jsxs(Container, { children: [_jsx(ModalContent, { style: { paddingBottom: 0 }, children: _jsx(ScrollArea, { height: 340, children: _jsxs(WalletList, { \"$disabled\": !wcUri, children: [walletsIdsToDisplay\n                                    .sort(\n                                // sort by name\n                                (a, b) => {\n                                    var _a, _b, _c, _d;\n                                    const walletA = walletConfigs[a];\n                                    const walletB = walletConfigs[b];\n                                    const nameA = (_b = (_a = walletA.name) !== null && _a !== void 0 ? _a : walletA.shortName) !== null && _b !== void 0 ? _b : a;\n                                    const nameB = (_d = (_c = walletB.name) !== null && _c !== void 0 ? _c : walletB.shortName) !== null && _d !== void 0 ? _d : b;\n                                    return nameA.localeCompare(nameB);\n                                })\n                                    .filter((walletId) => !(walletId === 'coinbaseWallet' ||\n                                    walletId === 'com.coinbase.wallet'))\n                                    .map((walletId, i) => {\n                                    const wallet = walletConfigs[walletId];\n                                    const { name, shortName, iconConnector, icon } = wallet;\n                                    return (_jsxs(WalletItem, { onClick: () => connectWallet(wallet), style: {\n                                            animationDelay: `${i * 50}ms`,\n                                        }, children: [_jsx(WalletIcon, { \"$outline\": true, children: iconConnector !== null && iconConnector !== void 0 ? iconConnector : icon }), _jsx(WalletLabel, { children: shortName !== null && shortName !== void 0 ? shortName : name })] }, i));\n                                }), _jsxs(WalletItem, { onClick: openW3M, \"$waiting\": isOpenW3M, children: [_jsx(WalletIcon, { style: { background: 'var(--ck-body-background-secondary)' }, children: isOpenW3M ? (_jsx(\"div\", { style: {\n                                                    position: 'absolute',\n                                                    inset: 0,\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    justifyContent: 'center',\n                                                }, children: _jsx(\"div\", { style: {\n                                                        width: '50%',\n                                                    }, children: _jsx(Spinner, {}) }) })) : (MoreIcon) }), _jsx(WalletLabel, { children: locales.more })] })] }) }) }), ((_b = context.options) === null || _b === void 0 ? void 0 : _b.walletConnectCTA) !== 'modal' && (_jsx(\"div\", { style: {\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        gap: 14,\n                        paddingTop: 8,\n                    }, children: _jsx(CopyToClipboard, { variant: \"button\", string: wcUri, children: locales.copyToClipboard }) }))] }) }));\n};\nexport default MobileConnectors;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Pages/MobileConnectors/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Modal/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/ConnectKit.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useWalletConnectModal.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/CopyToClipboard/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useLocales.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Spinner/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/ScrollArea/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/contexts/web3/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/wallets/useWallets.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/wallets/walletConfigs.tsx"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/Pages/MobileConnectors/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\ndeclare const MobileConnectors: React.FC;\nexport default MobileConnectors;\n"}}
