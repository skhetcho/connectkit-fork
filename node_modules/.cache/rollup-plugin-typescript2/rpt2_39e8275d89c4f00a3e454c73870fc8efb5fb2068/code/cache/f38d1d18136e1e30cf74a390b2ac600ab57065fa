{"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useContext, routes } from '../../ConnectKit';\nimport { LearnMoreContainer, LearnMoreButton, InfoBox, InfoBoxButtons, } from './styles';\nimport { PageContent, Disclaimer, ModalContent, ModalH1, ModalBody, } from '../../Common/Modal/styles';\nimport WalletIcon from '../../../assets/wallet';\nimport useLocales from '../../../hooks/useLocales';\nimport ConnectorList from '../../Common/ConnectorList';\nimport useIsMobile from '../../../hooks/useIsMobile';\nimport Button from '../../Common/Button';\nconst Wallets = () => {\n    var _a, _b, _c, _d, _e;\n    const context = useContext();\n    const locales = useLocales({});\n    const isMobile = useIsMobile();\n    return (_jsxs(PageContent, { style: { width: 312 }, children: [_jsx(ConnectorList, {}), isMobile ? (_jsx(_Fragment, { children: _jsxs(InfoBox, { children: [_jsxs(ModalContent, { style: { padding: 0, textAlign: 'left' }, children: [_jsx(ModalH1, { \"$small\": true, children: locales.connectorsScreen_h1 }), _jsx(ModalBody, { children: locales.connectorsScreen_p })] }), _jsxs(InfoBoxButtons, { children: [!((_a = context.options) === null || _a === void 0 ? void 0 : _a.hideQuestionMarkCTA) && (_jsx(Button, { variant: 'tertiary', onClick: () => context.setRoute(routes.ABOUT), children: locales.learnMore })), !((_b = context.options) === null || _b === void 0 ? void 0 : _b.hideNoWalletCTA) && (_jsx(Button, { variant: 'tertiary', onClick: () => context.setRoute(routes.ONBOARDING), children: locales.getWallet }))] })] }) })) : (_jsx(_Fragment, { children: !((_c = context.options) === null || _c === void 0 ? void 0 : _c.hideNoWalletCTA) && (_jsx(LearnMoreContainer, { children: _jsxs(LearnMoreButton, { onClick: () => context.setRoute(routes.ONBOARDING), children: [_jsx(WalletIcon, {}), \" \", locales.connectorsScreen_newcomer] }) })) })), ((_d = context.options) === null || _d === void 0 ? void 0 : _d.disclaimer) && (_jsx(Disclaimer, { style: { visibility: 'hidden', pointerEvents: 'none' }, children: _jsx(\"div\", { children: (_e = context.options) === null || _e === void 0 ? void 0 : _e.disclaimer }) }))] }));\n};\nexport default Wallets;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/ConnectKit.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Pages/Connectors/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Modal/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/assets/wallet.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useLocales.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/ConnectorList/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useIsMobile.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Button/index.tsx"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/Pages/Connectors/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\ndeclare const Wallets: React.FC;\nexport default Wallets;\n"}}
