{"code":"import { http } from 'wagmi';\nimport { mainnet, polygon, optimism, arbitrum } from 'wagmi/chains';\nimport defaultConnectors from './defaultConnectors';\n// TODO: Move these to a provider rather than global variable\nlet globalAppName;\nlet globalAppIcon;\nexport const getAppName = () => globalAppName;\nexport const getAppIcon = () => globalAppIcon;\nconst defaultConfig = ({ appName = 'ConnectKit', appIcon, appDescription, appUrl, walletConnectProjectId, coinbaseWalletPreference, chains = [mainnet, polygon, optimism, arbitrum], client, ...props }) => {\n    var _a, _b;\n    globalAppName = appName;\n    if (appIcon)\n        globalAppIcon = appIcon;\n    // TODO: nice to have, automate transports based on chains, but for now just provide public if not provided\n    const transports = (_a = props === null || props === void 0 ? void 0 : props.transports) !== null && _a !== void 0 ? _a : Object.fromEntries(chains.map((chain) => [chain.id, http()]));\n    const connectors = (_b = props === null || props === void 0 ? void 0 : props.connectors) !== null && _b !== void 0 ? _b : defaultConnectors({\n        app: {\n            name: appName,\n            icon: appIcon,\n            description: appDescription,\n            url: appUrl,\n        },\n        walletConnectProjectId,\n        coinbaseWalletPreference,\n    });\n    const config = {\n        ...props,\n        chains,\n        connectors,\n        transports,\n    };\n    return config;\n};\nexport default defaultConfig;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/wagmi/dist/types/exports/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@wagmi/core/dist/types/exports/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/wagmi/dist/types/exports/chains.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/wagmi/dist/types/exports/connectors.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/defaultConnectors.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/defaultConfig.d.ts","writeByteOrderMark":false,"text":"import { type CreateConfigParameters } from '@wagmi/core';\nimport { CoinbaseWalletParameters } from 'wagmi/connectors';\nexport declare const getAppName: () => string;\nexport declare const getAppIcon: () => string;\ntype DefaultConfigProps = {\n    appName: string;\n    appIcon?: string;\n    appDescription?: string;\n    appUrl?: string;\n    walletConnectProjectId: string;\n    coinbaseWalletPreference?: CoinbaseWalletParameters<'4'>['preference'];\n} & Partial<CreateConfigParameters>;\ndeclare const defaultConfig: ({ appName, appIcon, appDescription, appUrl, walletConnectProjectId, coinbaseWalletPreference, chains, client, ...props }: DefaultConfigProps) => CreateConfigParameters;\nexport default defaultConfig;\n"}}
