{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { useContext } from '../../ConnectKit';\nimport { PageContent, ModalBody, ModalContent, } from '../../Common/Modal/styles';\nimport { StatusGraphic, LogoContainer, StatusIcon, StatusGraphicBgSvg, ContentContainer, } from './styles';\nimport { useAccount } from 'wagmi';\nimport { SIWEButton } from '../../Standard/SIWE';\nimport { useSIWE } from '../../../siwe';\nimport { TickIcon } from '../../../assets/icons';\nimport Chains from '../../../assets/chains';\nimport Avatar from '../../Common/Avatar';\nimport { getAppIcon } from '../../../defaultConfig';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport LazyImage from '../../Common/LazyImage';\nimport { isMobile, flattenChildren } from '../../../utils';\nimport useLocales from '../../../hooks/useLocales';\nimport FitText from '../../Common/FitText';\nconst transition = { duration: 0.2, ease: [0.26, 0.08, 0.25, 1] };\nconst copyTransition = { duration: 0.16, ease: [0.26, 0.08, 0.25, 1] };\nconst SignInWithEthereum = () => {\n    var _a, _b;\n    const context = useContext();\n    const { isSignedIn, reset } = useSIWE();\n    const mobile = isMobile();\n    const [status, setStatus] = useState(isSignedIn ? 'signedIn' : 'signedOut');\n    const locales = useLocales({});\n    const copy = status === 'signedIn'\n        ? {\n            heading: locales.signInWithEthereumScreen_signedIn_heading,\n            h1: locales.signInWithEthereumScreen_signedIn_h1,\n            p: locales.signInWithEthereumScreen_signedIn_p,\n            button: locales.signInWithEthereumScreen_signedIn_button,\n        }\n        : {\n            heading: locales.signInWithEthereumScreen_signedOut_heading,\n            h1: locales.signInWithEthereumScreen_signedOut_h1,\n            p: locales.signInWithEthereumScreen_signedOut_p,\n            button: locales.signInWithEthereumScreen_signedOut_button,\n        };\n    useEffect(() => {\n        if (isSignedIn)\n            setStatus('signedIn');\n    }, []);\n    useEffect(() => {\n        if (!isSignedIn)\n            setStatus('signedOut');\n    }, [isSignedIn]);\n    const { address } = useAccount();\n    // We use the favicon for the dApp logo because that's how the connectors do it\n    // TODO: Allow for dev customisation\n    const getFavicons = () => {\n        const favicons = {\n            svg: null,\n            default: null,\n        };\n        const nodeList = document.getElementsByTagName('link');\n        Array.from(nodeList).forEach((node) => {\n            if ((node.getAttribute('rel') === 'icon' ||\n                node.getAttribute('rel') === 'shortcut icon') &&\n                node.getAttribute('href')) {\n                if (node.getAttribute('type') === 'image/svg+xml') {\n                    favicons.svg = node.getAttribute('href');\n                }\n                else {\n                    favicons.default = node.getAttribute('href');\n                }\n            }\n        });\n        return favicons;\n    };\n    const favicons = getFavicons();\n    const favicon = (_b = (_a = getAppIcon()) !== null && _a !== void 0 ? _a : favicons.svg) !== null && _b !== void 0 ? _b : favicons.default;\n    return (_jsx(PageContent, { style: { width: 278 }, children: _jsxs(ModalContent, { style: { padding: 0, marginTop: -10 }, children: [_jsx(ContentContainer, { children: _jsx(AnimatePresence, { exitBeforeEnter: true, children: _jsx(motion.div, { initial: mobile ? false : { opacity: 0, scale: 0.94 }, animate: { opacity: 1, scale: 1 }, exit: { opacity: 0, scale: 0.94 }, transition: copyTransition, children: _jsx(ModalBody, { style: { height: 42 }, children: _jsx(FitText, { children: copy.h1 }) }) }, flattenChildren(copy.h1).toString()) }) }), _jsxs(StatusGraphic, { \"$connected\": isSignedIn, children: [_jsx(\"div\", { style: { position: 'absolute', inset: 0 }, children: _jsx(StatusGraphicBgSvg, { width: \"262\", height: \"134\", viewBox: \"0 0 262 134\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(motion.rect, { x: \"0\", y: \"0\", rx: \"12\", width: \"262\", height: \"134\", strokeDasharray: \"3 3\", animate: {\n                                        strokeDashoffset: [0, -6],\n                                    }, transition: {\n                                        duration: 0.4,\n                                        ease: 'linear',\n                                        repeat: Infinity,\n                                    } }) }) }), _jsx(motion.div, { initial: mobile\n                                ? false\n                                : {\n                                    opacity: 0,\n                                    x: 50,\n                                    scale: 0.8,\n                                }, animate: {\n                                opacity: 1,\n                                x: 0,\n                                scale: 1,\n                            }, transition: transition, children: _jsx(LogoContainer, { children: _jsx(Avatar, { address: address, size: 64 }) }) }, \"avatarImage\"), _jsx(motion.div, { initial: mobile\n                                ? false\n                                : {\n                                    scale: 0.6,\n                                }, animate: {\n                                scale: 1,\n                            }, transition: {\n                                ...transition,\n                            }, children: _jsx(StatusIcon, { children: _jsx(TickIcon, {}) }) }, \"tickIcon\"), _jsx(motion.div, { initial: mobile\n                                ? false\n                                : {\n                                    opacity: 0,\n                                    x: -40,\n                                    scale: 0.8,\n                                }, animate: {\n                                opacity: 1,\n                                x: 0,\n                                scale: 1,\n                            }, transition: {\n                                ...transition,\n                            }, children: _jsx(LogoContainer, { children: favicon ? (_jsx(LazyImage, { src: favicon, alt: 'app' })) : (_jsx(Chains.UnknownChain, {})) }) }, \"appLogo\")] }, \"status\"), _jsx(AnimatePresence, { exitBeforeEnter: true, children: _jsx(motion.div, { style: { paddingBottom: mobile ? 24 : 12 }, initial: mobile ? false : { opacity: 0, scale: 0.94 }, animate: { opacity: 1, scale: 1 }, exit: { opacity: 0, scale: 0.94 }, transition: copyTransition, children: _jsx(ModalBody, { style: { height: 42, marginTop: -1, marginBottom: -3 }, children: _jsx(FitText, { children: copy.p }) }) }, flattenChildren(copy.p).toString()) }), _jsx(SIWEButton, { showSignOutButton: status === 'signedIn', onSignIn: () => {\n                        setTimeout(() => {\n                            context.setOpen(false);\n                        }, 1000);\n                    } })] }) }));\n};\nexport default SignInWithEthereum;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/ConnectKit.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Modal/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Pages/SignInWithEthereum/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/wagmi/dist/types/exports/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Standard/SIWE/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/siwe/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/assets/icons.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/assets/chains.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Avatar/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/defaultConfig.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/framer-motion/dist/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/LazyImage/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/utils/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useLocales.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/FitText/index.tsx"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/Pages/SignInWithEthereum/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\ndeclare const SignInWithEthereum: React.FC;\nexport default SignInWithEthereum;\n"}}
