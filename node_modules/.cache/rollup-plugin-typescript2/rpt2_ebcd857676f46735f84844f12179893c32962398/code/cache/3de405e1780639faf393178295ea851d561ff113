{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n// Based on https://hiddedevries.nl/en/blog/2017-01-29-using-javascript-to-trap-focus-in-an-element\nimport { useRef, useEffect } from 'react';\nconst KEYCODE_TAB = 9;\nfunction useFocusTrap() {\n    const elRef = useRef(null);\n    function handleFocus(e) {\n        if (!elRef.current)\n            return;\n        var focusableEls = elRef.current.querySelectorAll(`\r\n        a[href]:not(:disabled),\r\n        button:not(:disabled),\r\n        textarea:not(:disabled),\r\n        input[type=\"text\"]:not(:disabled),\r\n        input[type=\"radio\"]:not(:disabled),\r\n        input[type=\"checkbox\"]:not(:disabled),\r\n        select:not(:disabled)\r\n      `), firstFocusableEl = focusableEls[0], lastFocusableEl = focusableEls[focusableEls.length - 1];\n        var isTabPressed = e.key === 'Tab' || e.keyCode === KEYCODE_TAB;\n        if (!isTabPressed) {\n            return;\n        }\n        if (e.shiftKey) {\n            /* shift + tab */ if (document.activeElement === firstFocusableEl) {\n                lastFocusableEl.focus();\n                e.preventDefault();\n            }\n        } /* tab */\n        else {\n            if (document.activeElement === lastFocusableEl) {\n                firstFocusableEl.focus();\n                e.preventDefault();\n            }\n        }\n    }\n    useEffect(() => {\n        if (elRef.current) {\n            elRef.current.addEventListener('keydown', handleFocus);\n            elRef.current.focus({ preventScroll: true });\n        }\n        return () => {\n            if (elRef.current) {\n                elRef.current.removeEventListener('keydown', handleFocus);\n            }\n        };\n    }, []);\n    return elRef;\n}\nexport default function FocusTrap(props) {\n    const elRef = useFocusTrap();\n    useEffect(() => {\n        if (!elRef.current)\n            return;\n        elRef.current.focus({ preventScroll: true });\n    }, []);\n    return (_jsx(\"div\", { ref: elRef, tabIndex: 0, children: props.children }));\n}\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/hooks/useFocusTrap.d.ts","writeByteOrderMark":false,"text":"export default function FocusTrap(props: any): import(\"react/jsx-runtime\").JSX.Element;\n"}}
