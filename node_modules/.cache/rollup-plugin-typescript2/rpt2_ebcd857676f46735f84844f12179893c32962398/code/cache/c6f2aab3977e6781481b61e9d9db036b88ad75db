{"code":"import { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { createContext, createElement } from 'react';\nconst Context = createContext(null);\nexport const ConnectKitThemeProvider = ({ children, theme = 'auto', mode = 'auto', customTheme }) => {\n    const value = {\n        theme,\n        mode,\n        customTheme,\n    };\n    return createElement(Context.Provider, { value }, _jsx(_Fragment, { children: children }));\n};\nexport const useThemeContext = () => {\n    const context = React.useContext(Context);\n    if (!context)\n        throw Error('ConnectKitThemeProvider must be inside a Provider.');\n    return context;\n};\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/types.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/ConnectKitThemeProvider/ConnectKitThemeProvider.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\nimport { CustomTheme, Mode, Theme } from './../../types';\ntype ContextValue = {\n    theme?: Theme;\n    mode?: Mode;\n    customTheme?: CustomTheme;\n};\ntype ConnectKitThemeProviderProps = {\n    children?: React.ReactNode;\n    theme?: Theme;\n    mode?: Mode;\n    customTheme?: CustomTheme;\n};\nexport declare const ConnectKitThemeProvider: React.FC<ConnectKitThemeProviderProps>;\nexport declare const useThemeContext: () => ContextValue;\nexport {};\n"}}
