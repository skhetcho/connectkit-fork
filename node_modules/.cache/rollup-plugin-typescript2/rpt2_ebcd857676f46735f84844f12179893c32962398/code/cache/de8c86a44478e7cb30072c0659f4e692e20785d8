{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Button from '../../Common/Button';\nimport { DisconnectIcon, RetryIcon } from '../../../assets/icons';\nimport { ResetContainer } from '../../../styles';\nimport { motion } from 'framer-motion';\nimport useIsMounted from '../../../hooks/useIsMounted';\nimport useLocales from '../../../hooks/useLocales';\nimport { useSIWE } from './../../../siwe';\nimport { useAccount } from 'wagmi';\nimport { useModal } from '../../../hooks/useModal';\nexport const SIWEButton = ({ showSignOutButton, onSignIn, onSignOut, }) => {\n    const isMounted = useIsMounted();\n    const locales = useLocales();\n    const { setOpen } = useModal();\n    const { isSignedIn, isReady, isLoading, isRejected, isSuccess, isError, signIn, signOut, error, } = useSIWE({\n        onSignIn: (data) => onSignIn === null || onSignIn === void 0 ? void 0 : onSignIn(data),\n        onSignOut: () => onSignOut === null || onSignOut === void 0 ? void 0 : onSignOut(),\n    });\n    const { address: connectedAddress } = useAccount();\n    function getButtonLabel() {\n        if (isSuccess)\n            return locales.signedIn;\n        if (isRejected)\n            return locales.tryAgain;\n        if (isLoading)\n            return locales.awaitingConfirmation;\n        if (isError)\n            return error !== null && error !== void 0 ? error : 'Unknown Error';\n        if (isReady)\n            return locales.signIn;\n        return locales.signIn;\n    }\n    if (!isMounted) {\n        return _jsx(Button, { style: { margin: 0 }, disabled: true }, \"loading\");\n    }\n    if (showSignOutButton && isSignedIn) {\n        return (_jsx(Button, { style: { margin: 0 }, onClick: signOut, icon: _jsx(DisconnectIcon, {}), children: locales.signOut }, \"button\"));\n    }\n    if (!connectedAddress) {\n        // TODO: discuss non-connected wallet developer expectations\n        return (_jsx(Button, { style: { margin: 0 }, onClick: () => setOpen(true), arrow: true, children: locales.walletNotConnected }, \"button\"));\n    }\n    return (_jsx(Button, { style: { margin: 0 }, arrow: !isSignedIn ? !isLoading && !isRejected : false, onClick: !isLoading && !isSuccess ? signIn : undefined, disabled: isLoading, waiting: isLoading, icon: isRejected && (_jsx(motion.div, { initial: {\n                rotate: -270,\n            }, animate: {\n                rotate: 0,\n            }, transition: {\n                duration: 1,\n                ease: [0.175, 0.885, 0.32, 0.98],\n            }, children: _jsx(RetryIcon, { style: { opacity: 0.4 } }) })), children: getButtonLabel() }, \"button\"));\n};\nexport const SIWEButtonComponent = ({ ...props }) => (_jsx(ResetContainer, { children: _jsx(SIWEButton, { ...props }) }));\nexport default SIWEButtonComponent;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Button/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/assets/icons.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/styles/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/framer-motion/dist/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useIsMounted.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useLocales.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/siwe/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/wagmi/dist/types/exports/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useModal.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/Standard/SIWE/index.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\nimport { SIWESession } from './../../../siwe';\ntype ButtonProps = {\n    showSignOutButton?: boolean;\n    onSignIn?: (data?: SIWESession) => void;\n    onSignOut?: () => void;\n};\nexport declare const SIWEButton: React.FC<ButtonProps>;\nexport declare const SIWEButtonComponent: React.FC<ButtonProps>;\nexport default SIWEButtonComponent;\n"}}
