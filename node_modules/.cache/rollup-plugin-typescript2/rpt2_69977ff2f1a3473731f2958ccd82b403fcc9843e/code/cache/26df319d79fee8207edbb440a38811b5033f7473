{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { ButtonContainer, InnerContainer, IconContainer, Arrow, ArrowLine, ArrowChevron, DownloadArrow, DownloadArrowInner, ButtonContainerInner, SpinnerContainer, } from './styles';\nimport { AnimatePresence } from 'framer-motion';\nimport { flattenChildren } from '../../../utils';\nimport FitText from '../FitText';\nimport { Spinner } from '../Spinner';\nconst transition = {\n    duration: 0.4,\n    ease: [0.175, 0.885, 0.32, 0.98],\n};\nconst Button = ({ children, variant = 'secondary', // unique aspect to how we're handling buttons\ndisabled, icon, iconPosition = 'left', roundedIcon, waiting, arrow, download, href, style, onClick, }) => {\n    const key = typeof children === 'string'\n        ? children\n        : flattenChildren(children).join(''); // Need to generate a string for the key so we can automatically animate between content\n    const hrefUrl = typeof href === 'string' ? href : flattenChildren(href).join(''); // Need to have a flat string for the href\n    return (_jsx(ButtonContainer, { as: href ? 'a' : undefined, onClick: (event) => {\n            if (!disabled && onClick)\n                onClick(event);\n        }, href: hrefUrl, target: href && '_blank', rel: href && 'noopener noreferrer', disabled: disabled, \"$variant\": variant, style: style, children: _jsxs(AnimatePresence, { initial: false, children: [_jsxs(ButtonContainerInner, { initial: { opacity: 0, y: -10 }, animate: {\n                        opacity: 1,\n                        y: -1,\n                    }, exit: {\n                        position: 'absolute',\n                        opacity: 0,\n                        y: 10,\n                        transition: {\n                            ...transition,\n                        },\n                    }, transition: {\n                        ...transition,\n                        delay: 0.2,\n                    }, children: [icon && iconPosition === 'left' && (_jsx(IconContainer, { \"$rounded\": roundedIcon, children: icon })), download && (_jsx(DownloadArrow, { children: _jsx(DownloadArrowInner, { children: _jsxs(Arrow, { width: \"13\", height: \"12\", viewBox: \"0 0 13 12\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: [_jsx(ArrowLine, { stroke: \"currentColor\", x1: \"1\", y1: \"6\", x2: \"12\", y2: \"6\", strokeWidth: \"var(--stroke-width)\", strokeLinecap: \"round\" }), _jsx(ArrowChevron, { stroke: \"currentColor\", d: \"M7.51431 1.5L11.757 5.74264M7.5 10.4858L11.7426 6.24314\", strokeWidth: \"var(--stroke-width)\", strokeLinecap: \"round\" })] }) }) })), _jsx(InnerContainer, { style: { paddingLeft: arrow ? 6 : 0 }, children: _jsx(FitText, { children: children }) }), icon && iconPosition === 'right' && (_jsx(IconContainer, { \"$rounded\": roundedIcon, children: icon })), arrow && (_jsxs(Arrow, { width: \"13\", height: \"12\", viewBox: \"0 0 13 12\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: [_jsx(ArrowLine, { stroke: \"currentColor\", x1: \"1\", y1: \"6\", x2: \"12\", y2: \"6\", strokeWidth: \"2\", strokeLinecap: \"round\" }), _jsx(ArrowChevron, { stroke: \"currentColor\", d: \"M7.51431 1.5L11.757 5.74264M7.5 10.4858L11.7426 6.24314\", strokeWidth: \"2\", strokeLinecap: \"round\" })] }))] }, key), waiting && (_jsx(SpinnerContainer, { children: _jsx(Spinner, {}) }))] }) }));\n};\nexport default Button;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Button/types.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Button/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/framer-motion/dist/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/utils/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/FitText/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Spinner/index.tsx"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/Common/Button/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\nimport { ButtonProps } from './types';\ndeclare const Button: React.FC<ButtonProps>;\nexport default Button;\n"}}
