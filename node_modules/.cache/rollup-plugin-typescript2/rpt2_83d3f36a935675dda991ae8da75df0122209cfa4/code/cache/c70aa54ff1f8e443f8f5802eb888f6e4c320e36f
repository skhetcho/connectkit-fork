{"code":"import { createContext } from 'react';\nexport var StatusState;\n(function (StatusState) {\n    StatusState[\"READY\"] = \"ready\";\n    StatusState[\"LOADING\"] = \"loading\";\n    StatusState[\"SUCCESS\"] = \"success\";\n    StatusState[\"REJECTED\"] = \"rejected\";\n    StatusState[\"ERROR\"] = \"error\";\n})(StatusState || (StatusState = {}));\nexport const SIWEContext = createContext(null);\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@tanstack/react-query/build/legacy/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/viem/_types/index.d.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/siwe/SIWEContext.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\nimport { useQuery } from '@tanstack/react-query';\nimport { Address } from 'viem';\nexport declare enum StatusState {\n    READY = \"ready\",\n    LOADING = \"loading\",\n    SUCCESS = \"success\",\n    REJECTED = \"rejected\",\n    ERROR = \"error\"\n}\nexport type SIWESession = {\n    address: Address;\n    chainId: number;\n};\nexport type SIWEConfig = {\n    getNonce: () => Promise<string>;\n    createMessage: (args: {\n        nonce: string;\n        address: Address;\n        chainId: number;\n    }) => Promise<string> | string;\n    verifyMessage: (args: {\n        message: string;\n        signature: string;\n    }) => Promise<boolean>;\n    getSession: () => Promise<SIWESession | null>;\n    signOut: () => Promise<boolean>;\n    enabled?: boolean;\n    nonceRefetchInterval?: number;\n    sessionRefetchInterval?: number;\n    signOutOnDisconnect?: boolean;\n    signOutOnAccountChange?: boolean;\n    signOutOnNetworkChange?: boolean;\n};\nexport type SIWEContextValue = Required<SIWEConfig> & {\n    nonce: ReturnType<typeof useQuery<string | null>>;\n    session: ReturnType<typeof useQuery<SIWESession | null>>;\n    status: StatusState;\n    signIn: () => Promise<SIWESession | false>;\n    resetStatus: () => void;\n};\nexport declare const SIWEContext: import(\"react\").Context<SIWEContextValue | null>;\n"}}
