{"code":"import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { routes, useContext } from './../../ConnectKit';\nimport { flattenChildren, isMobile } from './../../../utils';\nimport defaultTheme from './../../../constants/defaultTheme';\nimport styled from './../../../styles/styled';\nimport { css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport Tooltip from '../Tooltip';\nimport ChainSelectDropdown from '../ChainSelectDropdown';\nimport Chain from '../Chain';\nimport useLocales from '../../../hooks/useLocales';\nimport { useAccount, useSwitchChain } from 'wagmi';\nconst Container = styled(motion.div).withConfig({ displayName: \"Container\", componentId: \"-1ytf5rs\" }) ``;\nconst SwitchChainButton = styled(motion.button).withConfig({ displayName: \"SwitchChainButton\", componentId: \"-1cdkf9q\" }) `\r\n  --color: var(\r\n    --ck-dropdown-button-color,\r\n    var(--ck-button-primary-color, var(--ck-body-color))\r\n  );\r\n  --background: var(\r\n    --ck-dropdown-button-background,\r\n    var(--ck-secondary-button-background, var(--ck-body-background-secondary))\r\n  );\r\n  --box-shadow: var(\r\n    --ck-dropdown-button-box-shadow,\r\n    var(\r\n      --ck-secondary-button-box-shadow,\r\n      var(--ck-button-primary-box-shadow),\r\n      none\r\n    )\r\n  );\r\n\r\n  --hover-color: var(--ck-dropdown-button-hover-color, var(--color));\r\n  --hover-background: var(\r\n    --ck-dropdown-button-hover-background,\r\n    var(--background)\r\n  );\r\n  --hover-box-shadow: var(\r\n    --ck-dropdown-button-hover-box-shadow,\r\n    var(--box-shadow)\r\n  );\r\n\r\n  --active-color: var(--ck-dropdown-button-active-color, var(--hover-color));\r\n  --active-background: var(\r\n    --ck-dropdown-button-active-background,\r\n    var(--hover-background)\r\n  );\r\n  --active-box-shadow: var(\r\n    --ck-dropdown-button-active-box-shadow,\r\n    var(--hover-box-shadow)\r\n  );\r\n\r\n  appearance: none;\r\n  user-select: none;\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-radius: 15px;\r\n  width: 52px;\r\n  height: 30px;\r\n  padding: 2px 6px 2px 3px;\r\n  font-size: 16px;\r\n  line-height: 19px;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  white-space: nowrap;\r\n  transform: translateZ(0px);\r\n\r\n  transition: 100ms ease;\r\n  transition-property: transform, background-color, box-shadow, color;\r\n\r\n  color: var(--color);\r\n  background: var(--background);\r\n  box-shadow: var(--box-shadow);\r\n\r\n  svg {\r\n    position: relative;\r\n    display: block;\r\n  }\r\n\r\n  ${(props) => props.disabled\n    ? css `\r\n          width: auto;\r\n          padding: 3px;\r\n          position: relative;\r\n          left: -22px;\r\n        `\n    : css `\r\n          cursor: pointer;\r\n\r\n          @media only screen and (min-width: ${defaultTheme.mobileWidth +\n        1}px) {\r\n            &:hover,\r\n            &:focus-visible {\r\n              color: var(--hover-color);\r\n              background: var(--hover-background);\r\n              box-shadow: var(--hover-box-shadow);\r\n            }\r\n            &:active {\r\n              color: var(--active-color);\r\n              background: var(--active-background);\r\n              box-shadow: var(--active-box-shadow);\r\n            }\r\n          }\r\n        `}\r\n`;\nconst ChevronDown = ({ ...props }) => (_jsx(\"svg\", { \"aria-hidden\": \"true\", width: \"11\", height: \"6\", viewBox: \"0 0 11 6\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props, children: _jsx(\"path\", { d: \"M1.5 1L5.5 5L9.5 1\", stroke: \"currentColor\", strokeWidth: \"2\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }) }));\nconst ChainSelector = () => {\n    const context = useContext();\n    const [isOpen, setIsOpen] = useState(false);\n    const { chain } = useAccount();\n    const { chains } = useSwitchChain();\n    const locales = useLocales({\n        CHAIN: chain === null || chain === void 0 ? void 0 : chain.name,\n    });\n    const mobile = isMobile() || (window === null || window === void 0 ? void 0 : window.innerWidth) < defaultTheme.mobileWidth;\n    useEffect(() => {\n        if (!context.open)\n            setIsOpen(false);\n    }, [context.open]);\n    const disabled = chains.length <= 1;\n    return (_jsx(_Fragment, { children: _jsx(Container, { children: _jsx(ChainSelectDropdown, { offsetX: -12, open: !mobile && isOpen, onClose: () => setIsOpen(false), children: _jsxs(SwitchChainButton, { \"aria-label\": flattenChildren(locales.switchNetworks).toString(), disabled: disabled, onClick: () => {\n                        if (mobile) {\n                            context.setRoute(routes.SWITCHNETWORKS);\n                        }\n                        else {\n                            setIsOpen(!isOpen);\n                        }\n                    }, children: [disabled ? (_jsx(Tooltip, { message: locales.chainNetwork, xOffset: -6, delay: 0.01, children: _jsx(Chain, { id: chain === null || chain === void 0 ? void 0 : chain.id }) })) : (_jsx(Chain, { id: chain === null || chain === void 0 ? void 0 : chain.id })), !disabled && _jsx(ChevronDown, { style: { top: 1, left: -3 } })] }) }) }) }));\n};\nexport default ChainSelector;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/ConnectKit.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/utils/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/constants/defaultTheme.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/styles/styled/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/styled-components/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/framer-motion/dist/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Tooltip/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/ChainSelectDropdown/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Chain/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useLocales.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/wagmi/dist/types/exports/index.d.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/Common/ChainSelect/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\ndeclare const ChainSelector: React.FC;\nexport default ChainSelector;\n"}}
