{"code":"import styled from './styled';\nimport { css } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { hexToP3 } from '../utils/p3';\nimport predefinedThemes from './themes';\n/**\n * Theme variables for the modal\n */\nconst themeGlobals = {\n    default: {\n        '--ck-font-family': `-apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica,\r\n    'Apple Color Emoji', Arial, sans-serif, 'Segoe UI Emoji',\r\n    'Segoe UI Symbol'`,\n        '--ck-border-radius': '20px',\n        '--ck-secondary-button-border-radius': '16px',\n    },\n    graphics: {\n        light: {\n            '--ck-graphic-wave-stop-01': '#E8F17D',\n            '--ck-graphic-wave-stop-02': '#A8ECDE',\n            '--ck-graphic-wave-stop-03': '#7AA1F2',\n            '--ck-graphic-wave-stop-04': '#DEA1E8',\n            '--ck-graphic-wave-stop-05': '#F46D98',\n            '--ck-graphic-scaniconwithlogos-01': '#4E4E4E',\n            '--ck-graphic-scaniconwithlogos-02': '#272727',\n            '--ck-graphic-scaniconwithlogos-03': '#F8D74A',\n            '--ck-graphic-scaniconwithlogos-04': '#F6F7F9',\n            '--ck-chain-ethereum-01': '#25292E',\n            '--ck-chain-ethereum-02': '#fff',\n            '--ck-chain-ethereum-03': '#DFE0E0',\n        },\n        dark: {\n            '--ck-graphic-wave-stop-01': '#E8F17D',\n            '--ck-graphic-wave-stop-02': '#A8ECDE',\n            '--ck-graphic-wave-stop-03': '#7AA1F2',\n            '--ck-graphic-wave-stop-04': '#DEA1E8',\n            '--ck-graphic-wave-stop-05': '#F46D98',\n            '--ck-graphic-scaniconwithlogos-01': '#AFAFAF',\n            '--ck-graphic-scaniconwithlogos-02': '#696969',\n            '--ck-graphic-scaniconwithlogos-03': '#F8D74A',\n            '--ck-graphic-scaniconwithlogos-04': '#3D3D3D',\n            //'--ck-chain-ethereum-01': '#fff',\n            //'--ck-chain-ethereum-02': '#000',\n            //'--ck-chain-ethereum-03': '#000',\n        },\n    },\n    ens: {\n        light: {\n            '--ck-ens-01-start': '#FF3B30',\n            '--ck-ens-01-stop': '#FF9500',\n            '--ck-ens-02-start': '#FF9500',\n            '--ck-ens-02-stop': '#FFCC00',\n            '--ck-ens-03-start': '#FFCC00',\n            '--ck-ens-03-stop': '#34C759',\n            '--ck-ens-04-start': '#5856D6',\n            '--ck-ens-04-stop': '#AF52DE',\n            '--ck-ens-05-start': '#5AC8FA',\n            '--ck-ens-05-stop': '#007AFF',\n            '--ck-ens-06-start': '#007AFF',\n            '--ck-ens-06-stop': '#5856D6',\n            '--ck-ens-07-start': '#5856D6',\n            '--ck-ens-07-stop': '#AF52DE',\n            '--ck-ens-08-start': '#AF52DE',\n            '--ck-ens-08-stop': '#FF2D55',\n        },\n        dark: {\n            '--ck-ens-01-start': '#FF453A',\n            '--ck-ens-01-stop': '#FF9F0A',\n            '--ck-ens-02-start': '#FF9F0A',\n            '--ck-ens-02-stop': '#FFD60A',\n            '--ck-ens-03-start': '#FFD60A',\n            '--ck-ens-03-stop': '#32D74B',\n            '--ck-ens-04-start': '#32D74B',\n            '--ck-ens-04-stop': '#64D2FF',\n            '--ck-ens-05-start': '#64D2FF',\n            '--ck-ens-05-stop': '#0A84FF',\n            '--ck-ens-06-start': '#0A84FF',\n            '--ck-ens-06-stop': '#5E5CE6',\n            '--ck-ens-07-start': '#5E5CE6',\n            '--ck-ens-07-stop': '#BF5AF2',\n            '--ck-ens-08-start': '#BF5AF2',\n            '--ck-ens-08-stop': '#FF2D55',\n        },\n    },\n    brand: {\n        '--ck-family-brand': '#1A88F8',\n        '--ck-brand-walletConnect': '#3B99FC',\n        '--ck-brand-coinbaseWallet': '#0052FF',\n        '--ck-brand-metamask': '#f6851b',\n        '--ck-brand-metamask-01': '#F6851B',\n        '--ck-brand-metamask-02': '#E2761B',\n        '--ck-brand-metamask-03': '#CD6116',\n        '--ck-brand-metamask-04': '#161616',\n        '--ck-brand-metamask-05': '#763D16',\n        '--ck-brand-metamask-06': '#D7C1B3',\n        '--ck-brand-metamask-07': '#C0AD9E',\n        '--ck-brand-metamask-08': '#E4761B',\n        '--ck-brand-metamask-09': '#233447',\n        '--ck-brand-metamask-10': '#E4751F',\n        '--ck-brand-metamask-11': '#FEF5E7',\n        '--ck-brand-metamask-12': '#E3C8AB',\n        '--ck-brand-trust-01': '#3375BB',\n        '--ck-brand-trust-02': '#ffffff',\n        '--ck-brand-trust-01b': '#ffffff', // dark Theme\n        '--ck-brand-trust-02b': '#3375BB', // dark Theme\n        '--ck-brand-argent': '#f36a3d',\n        '--ck-brand-imtoken-01': '#11C4D1',\n        '--ck-brand-imtoken-02': '#0062AD',\n        '--ck-brand-safe': '#12FF80',\n        '--ck-brand-dawn': '#000000',\n    },\n};\nconst themeColors = {\n    light: predefinedThemes.base.light,\n    dark: predefinedThemes.base.dark,\n    web95: predefinedThemes.web95,\n    retro: predefinedThemes.retro,\n    soft: predefinedThemes.soft,\n    midnight: predefinedThemes.midnight,\n    minimal: predefinedThemes.minimal,\n    rounded: predefinedThemes.rounded,\n    nouns: predefinedThemes.nouns,\n};\n/**\n *  Automatically use p3 if available\n */\n//  TODO: Don't use :any type\nconst createCssVars = (scheme, important) => {\n    return css `\r\n    ${Object.keys(scheme).map((key) => {\n        const value = scheme[key];\n        return value && `${key}:${value};`;\n    })}\r\n  `;\n};\nconst createCssColors = (scheme, override) => {\n    const important = override ? ' !important' : '';\n    return css `\r\n    ${Object.keys(scheme).map((key) => {\n        const value = scheme[key];\n        return value && `${key}:${value}${important};`;\n    })}\r\n    @supports (color: color(display-p3 1 1 1)) {\r\n      ${Object.keys(scheme).map((key) => {\n        const value = scheme[key];\n        return `${key}:${hexToP3(value)}${important};`;\n    })}\r\n    }\r\n  `;\n};\nconst themes = {\n    default: createCssVars(themeGlobals.default),\n    light: createCssColors(themeColors.light),\n    dark: createCssColors(themeColors.dark),\n    web95: createCssColors(themeColors.web95),\n    retro: createCssColors(themeColors.retro),\n    soft: createCssColors(themeColors.soft),\n    midnight: createCssColors(themeColors.midnight),\n    minimal: createCssColors(themeColors.minimal),\n    rounded: createCssColors(themeColors.rounded),\n    nouns: createCssColors(themeColors.nouns),\n};\nconst globals = {\n    brand: createCssVars(themeGlobals.brand),\n    ensLight: createCssVars(themeGlobals.ens.light),\n    ensDark: createCssVars(themeGlobals.ens.dark),\n    graphicsLight: createCssVars(themeGlobals.graphics.light),\n    graphicsDark: createCssVars(themeGlobals.graphics.dark),\n};\nconst globalsLight = css `\r\n  ${globals.brand}\r\n  ${globals.ensLight}\r\n  ${globals.graphicsLight}\r\n`;\nconst globalsDark = css `\r\n  ${globals.brand}\r\n  ${globals.ensDark}\r\n  ${globals.graphicsDark}\r\n`;\n/*\n *  Reset stylings to avoid conflicting with the parent websites styling\n * Automatically apply theme based on system theme\n */\n// TODO: Think more about how to reset our components as to not be affected by external stylings\n// TODO: Merge theme objects instead of overriding\nlet mode = 'auto';\nexport const ResetContainer = styled(motion.div).withConfig({ displayName: \"ResetContainer\", componentId: \"-1ifp2e8\" }) `\r\n  ${themes.default}\r\n\r\n  ${(props) => {\n    switch (props.$useTheme) {\n        case 'web95':\n            mode = 'light';\n            return themes.web95;\n        case 'retro':\n            mode = 'light';\n            return themes.retro;\n        case 'soft':\n            mode = 'light';\n            return themes.soft;\n        case 'midnight':\n            mode = 'dark';\n            return themes.midnight;\n        case 'minimal':\n            mode = 'light';\n            return themes.minimal;\n        case 'rounded':\n            mode = 'light';\n            return themes.rounded;\n        case 'nouns':\n            mode = 'light';\n            return themes.nouns;\n        default:\n            if (props.$useMode === 'light') {\n                mode = 'light';\n                return themes.light;\n            }\n            else if (props.$useMode === 'dark') {\n                mode = 'dark';\n                return themes.dark;\n            }\n            else {\n                return css `\r\n            @media (prefers-color-scheme: light) {\r\n              ${themes.light}\r\n            }\r\n            @media (prefers-color-scheme: dark) {\r\n              ${themes.dark}\r\n            }\r\n          `;\n            }\n    }\n}}\r\n\r\n  ${(props) => {\n    switch (mode) {\n        case 'light':\n            return globalsLight;\n        case 'dark':\n            return globalsDark;\n        default:\n            return css `\r\n          ${globalsLight}\r\n          @media (prefers-color-scheme: dark) {\r\n            ${globalsDark}\r\n          }\r\n        `;\n    }\n}}\r\n\r\n\r\n  ${(props) => {\n    var _a;\n    if (props.$customTheme &&\n        props.$customTheme['--ck-accent-color'] &&\n        ['light', 'dark', 'auto', '', undefined].includes(props.$useTheme)) {\n        const accentColor = props.$customTheme['--ck-accent-color'];\n        const accentTextColor = (_a = props.$customTheme['--ck-accent-text-color']) !== null && _a !== void 0 ? _a : '#ffffff';\n        return {\n            '--ck-accent-color': accentColor,\n            '--ck-accent-text-color': accentTextColor,\n            // '--ck-connectbutton-color': accentTextColor,\n            // '--ck-connectbutton-background': accentColor,\n            // '--ck-connectbutton-background-hover': accentColor,\n            // '--ck-connectbutton-background-active': LightenDarkenColor(\n            // accentColor,\n            // 20\n            // ),\n            '--ck-secondary-button-background': accentColor,\n            '--ck-secondary-button-hover-background': accentColor,\n            '--ck-secondary-button-color': accentTextColor,\n            '--ck-button-primary-color': accentTextColor,\n            '--ck-focus-color': accentColor,\n        };\n    }\n    if (props.$customTheme) {\n        return createCssColors(props.$customTheme, true);\n    }\n}}\r\n\r\n  all: initial;\r\n  text-align: left;\r\n  text-direction: ltr;\r\n  text-rendering: optimizeLegibility;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  -webkit-text-stroke: 0.001px transparent;\r\n  text-size-adjust: none;\r\n  font-size: 16px;\r\n\r\n  button {\r\n    text-rendering: optimizeLegibility;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n    -webkit-text-stroke: 0.001px transparent;\r\n  }\r\n\r\n  &,\r\n  * {\r\n    font-family: var(--ck-font-family);\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    border: none;\r\n  }\r\n  /*\r\n  @media (prefers-reduced-motion) {\r\n    * {\r\n      animation-duration: 60ms !important;\r\n      transition-duration: 60ms !important;\r\n    }\r\n  }\r\n  */\r\n  img,\r\n  svg {\r\n    max-width: 100%;\r\n  }\r\n  strong {\r\n    font-weight: 600;\r\n  }\r\n  a:focus-visible,\r\n  button:focus-visible {\r\n    outline: 2px solid var(--ck-focus-color);\r\n  }\r\n`;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/styles/styled/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/styled-components/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/framer-motion/dist/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/types.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/utils/p3.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/styles/themes/index.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/styles/index.d.ts","writeByteOrderMark":false,"text":"export declare const ResetContainer: any;\n"}}
