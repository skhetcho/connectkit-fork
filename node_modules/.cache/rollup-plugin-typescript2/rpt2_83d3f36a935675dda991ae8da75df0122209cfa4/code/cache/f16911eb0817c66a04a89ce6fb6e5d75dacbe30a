{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { useContext } from '../../ConnectKit';\nimport { isSafeConnector, nFormatter, truncateEthAddress, } from '../../../utils';\nimport { useConnect, useDisconnect, useAccount, useEnsName, useBalance, } from 'wagmi';\nimport { AvatarContainer, AvatarInner, ChainSelectorContainer, BalanceContainer, LoadingBalance, Balance, } from './styles';\nimport { PageContent, ModalBody, ModalContent, ModalH1, } from '../../Common/Modal/styles';\nimport Button from '../../Common/Button';\nimport Avatar from '../../Common/Avatar';\nimport ChainSelector from '../../Common/ChainSelect';\nimport { DisconnectIcon } from '../../../assets/icons';\nimport CopyToClipboard from '../../Common/CopyToClipboard';\nimport { AnimatePresence } from 'framer-motion';\nimport { useThemeContext } from '../../ConnectKitThemeProvider/ConnectKitThemeProvider';\nimport useLocales from '../../../hooks/useLocales';\nimport { useEnsFallbackConfig } from '../../../hooks/useEnsFallbackConfig';\nconst Profile = ({ closeModal }) => {\n    var _a, _b, _c;\n    const context = useContext();\n    const themeContext = useThemeContext();\n    const locales = useLocales();\n    const { reset } = useConnect();\n    const { disconnect } = useDisconnect();\n    const { address, isConnected, connector, chain } = useAccount();\n    const ensFallbackConfig = useEnsFallbackConfig();\n    const { data: ensName } = useEnsName({\n        chainId: 1,\n        address: address,\n        config: ensFallbackConfig,\n    });\n    const { data: balance } = useBalance({\n        address,\n        //watch: true,\n    });\n    const [shouldDisconnect, setShouldDisconnect] = useState(false);\n    useEffect(() => {\n        if (!isConnected)\n            context.setOpen(false);\n    }, [isConnected]);\n    useEffect(() => {\n        if (!shouldDisconnect)\n            return;\n        // Close before disconnecting to avoid layout shifting while modal is still open\n        if (closeModal) {\n            closeModal();\n        }\n        else {\n            context.setOpen(false);\n        }\n        return () => {\n            disconnect();\n            reset();\n        };\n    }, [shouldDisconnect, disconnect, reset]);\n    const separator = ['web95', 'rounded', 'minimal'].includes((_b = (_a = themeContext.theme) !== null && _a !== void 0 ? _a : context.theme) !== null && _b !== void 0 ? _b : '')\n        ? '....'\n        : undefined;\n    return (_jsxs(PageContent, { children: [_jsxs(ModalContent, { style: { paddingBottom: 22, gap: 6 }, children: [_jsx(AvatarContainer, { children: _jsxs(AvatarInner, { children: [_jsx(ChainSelectorContainer, { children: _jsx(ChainSelector, {}) }), _jsx(Avatar, { address: address })] }) }), _jsx(ModalH1, { children: _jsx(CopyToClipboard, { string: address, children: ensName !== null && ensName !== void 0 ? ensName : truncateEthAddress(address, separator) }) }), ((_c = context === null || context === void 0 ? void 0 : context.options) === null || _c === void 0 ? void 0 : _c.hideBalance) ? null : (_jsx(ModalBody, { children: _jsx(BalanceContainer, { children: _jsxs(AnimatePresence, { exitBeforeEnter: true, initial: false, children: [balance && (_jsxs(Balance, { initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 }, transition: { duration: 0.2 }, children: [nFormatter(Number(balance === null || balance === void 0 ? void 0 : balance.formatted)), ` `, balance === null || balance === void 0 ? void 0 : balance.symbol] }, `chain-${chain === null || chain === void 0 ? void 0 : chain.id}`)), !balance && (_jsx(LoadingBalance, { initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 }, transition: { duration: 0.2 }, children: \"\\u00A0\" }))] }) }) }))] }), !isSafeConnector(connector === null || connector === void 0 ? void 0 : connector.id) && (_jsx(Button, { onClick: () => setShouldDisconnect(true), icon: _jsx(DisconnectIcon, {}), children: locales.disconnect }))] }));\n};\nexport default Profile;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/ConnectKit.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/utils/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/wagmi/dist/types/exports/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Pages/Profile/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Modal/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Button/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Avatar/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/ChainSelect/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/assets/icons.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/CopyToClipboard/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/framer-motion/dist/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/ConnectKitThemeProvider/ConnectKitThemeProvider.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useLocales.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useEnsFallbackConfig.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/Pages/Profile/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\ndeclare const Profile: React.FC<{\n    closeModal?: () => void;\n}>;\nexport default Profile;\n"}}
