{"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nconst LazyImage = ({ src, alt, width, height }) => {\n    const imageRef = useRef(null);\n    const [loaded, setLoaded] = useState(true);\n    useEffect(() => {\n        if (!(imageRef.current &&\n            imageRef.current.complete &&\n            imageRef.current.naturalHeight !== 0)) {\n            setLoaded(false);\n        }\n    }, [src]);\n    return (_jsx(\"div\", { style: {\n            width,\n            height,\n            background: 'rgba(0,0,0,0.02)',\n            boxShadow: 'inset 0 0 0 1px rgba(0,0,0,0.02)',\n        }, children: _jsx(\"img\", { ref: imageRef, src: src, alt: alt, width: width, height: height, onLoad: () => setLoaded(true), style: { transition: 'opacity 0.2s ease', opacity: loaded ? 1 : 0 } }) }));\n};\nexport default LazyImage;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/Common/LazyImage/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\ndeclare const LazyImage: React.FC<{\n    src: string;\n    alt?: string;\n    width?: number;\n    height?: number;\n}>;\nexport default LazyImage;\n"}}
