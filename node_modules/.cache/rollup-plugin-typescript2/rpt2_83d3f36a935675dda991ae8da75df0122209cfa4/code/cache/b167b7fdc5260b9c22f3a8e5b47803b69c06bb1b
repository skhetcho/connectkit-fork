{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport styled from './../../styles/styled';\nimport { keyframes } from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAccount, useBalance, useBlockNumber } from 'wagmi';\nimport useIsMounted from '../../hooks/useIsMounted';\nimport Chain from '../Common/Chain';\nimport { chainConfigs } from '../../constants/chainConfigs';\nimport ThemedButton from '../Common/ThemedButton';\nimport { nFormatter } from '../../utils';\nimport { useChains } from '../../hooks/useChains';\nimport { useChainIsSupported } from '../../hooks/useChainIsSupported';\nconst Container = styled(motion.div).withConfig({ displayName: \"Container\", componentId: \"-188oyai\" }) `\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n`;\nconst PlaceholderKeyframes = keyframes `\r\n  0%,100%{ opacity: 0.1; transform: scale(0.75); }\r\n  50%{ opacity: 0.75; transform: scale(1.2) }\r\n`;\nconst PulseContainer = styled.div.withConfig({ displayName: \"PulseContainer\", componentId: \"-7xlv6p\" }) `\r\n  pointer-events: none;\r\n  user-select: none;\r\n  padding: 0 5px;\r\n  span {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin: 0 2px;\r\n    width: 3px;\r\n    height: 3px;\r\n    border-radius: 4px;\r\n    background: currentColor;\r\n    animation: ${PlaceholderKeyframes} 1000ms ease infinite both;\r\n  }\r\n`;\nexport const Balance = ({ hideIcon, hideSymbol }) => {\n    const isMounted = useIsMounted();\n    const [isInitial, setIsInitial] = useState(true);\n    const { address, chain } = useAccount();\n    const chains = useChains();\n    const isChainSupported = useChainIsSupported(chain === null || chain === void 0 ? void 0 : chain.id);\n    const queryClient = useQueryClient();\n    const { data: blockNumber } = useBlockNumber({ watch: true });\n    const { data: balance, queryKey } = useBalance({\n        address,\n        chainId: chain === null || chain === void 0 ? void 0 : chain.id,\n    });\n    useEffect(() => {\n        if (blockNumber !== null && blockNumber !== void 0 ? blockNumber : 0 % 5 === 0)\n            queryClient.invalidateQueries({ queryKey });\n    }, [blockNumber, queryKey]);\n    const currentChain = chainConfigs.find((c) => c.id === (chain === null || chain === void 0 ? void 0 : chain.id));\n    const state = `${!isMounted || (balance === null || balance === void 0 ? void 0 : balance.formatted) === undefined\n        ? `balance-loading`\n        : `balance-${currentChain === null || currentChain === void 0 ? void 0 : currentChain.id}-${balance === null || balance === void 0 ? void 0 : balance.formatted}`}`;\n    useEffect(() => {\n        setIsInitial(false);\n    }, []);\n    return (_jsx(\"div\", { style: { position: 'relative' }, children: _jsx(AnimatePresence, { initial: false, children: _jsx(motion.div, { initial: (balance === null || balance === void 0 ? void 0 : balance.formatted) !== undefined && isInitial\n                    ? {\n                        opacity: 1,\n                    }\n                    : { opacity: 0, position: 'absolute', top: 0, left: 0, bottom: 0 }, animate: { opacity: 1, position: 'relative' }, exit: {\n                    opacity: 0,\n                    position: 'absolute',\n                    top: 0,\n                    left: 0,\n                    bottom: 0,\n                }, transition: {\n                    duration: 0.4,\n                    ease: [0.25, 1, 0.5, 1],\n                    delay: 0.4,\n                }, children: !address || !isMounted || (balance === null || balance === void 0 ? void 0 : balance.formatted) === undefined ? (_jsxs(Container, { children: [!hideIcon && _jsx(Chain, { id: chain === null || chain === void 0 ? void 0 : chain.id }), _jsx(\"span\", { style: { minWidth: 32 }, children: _jsxs(PulseContainer, { children: [_jsx(\"span\", { style: { animationDelay: '0ms' } }), _jsx(\"span\", { style: { animationDelay: '50ms' } }), _jsx(\"span\", { style: { animationDelay: '100ms' } })] }) })] })) : !isChainSupported ? (_jsxs(Container, { children: [!hideIcon && _jsx(Chain, { id: chain === null || chain === void 0 ? void 0 : chain.id }), _jsx(\"span\", { style: { minWidth: 32 }, children: \"???\" })] })) : (_jsxs(Container, { children: [!hideIcon && _jsx(Chain, { id: chain === null || chain === void 0 ? void 0 : chain.id }), _jsx(\"span\", { style: { minWidth: 32 }, children: nFormatter(Number(balance === null || balance === void 0 ? void 0 : balance.formatted)) }), !hideSymbol && ` ${balance === null || balance === void 0 ? void 0 : balance.symbol}`] })) }, state) }) }));\n};\nconst BalanceButton = ({ theme, mode, customTheme, hideIcon, hideSymbol, }) => {\n    return (_jsx(ThemedButton, { duration: 0.4, variant: 'secondary', theme: theme, mode: mode, customTheme: customTheme, children: _jsx(Balance, { hideIcon: hideIcon, hideSymbol: hideSymbol }) }));\n};\nexport default BalanceButton;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/types.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@tanstack/react-query/build/legacy/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/styles/styled/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/styled-components/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/framer-motion/dist/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/wagmi/dist/types/exports/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useIsMounted.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Chain/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/constants/chainConfigs.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/ThemedButton/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/utils/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useChains.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useChainIsSupported.ts"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/BalanceButton/index.d.ts","writeByteOrderMark":false,"text":"import React from 'react';\nimport { All } from './../../types';\ntype BalanceProps = {\n    hideIcon?: boolean;\n    hideSymbol?: boolean;\n};\nexport declare const Balance: React.FC<BalanceProps>;\ndeclare const BalanceButton: React.FC<All & BalanceProps>;\nexport default BalanceButton;\n"}}
