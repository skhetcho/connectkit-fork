{"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { useAccount, useSwitchChain } from 'wagmi';\nimport { chainConfigs } from '../../../constants/chainConfigs';\nimport { SwitchNetworksContainer, ChainButton, ChainButtonContainer, ChainButtonBg, ChainButtonStatus, ChainButtons, ChainIcon, ChainLogoContainer, ChainLogoSpinner, } from './styles';\nimport Alert from '../Alert';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { isCoinbaseWalletConnector, isMobile } from '../../../utils';\nimport ChainIcons from '../../../assets/chains';\nimport useLocales from '../../../hooks/useLocales';\nimport { useContext } from '../../ConnectKit';\nconst Spinner = (_jsxs(\"svg\", { \"aria-hidden\": \"true\", width: \"36\", height: \"36\", viewBox: \"0 0 36 36\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: [_jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M2 16.75C2.69036 16.75 3.25 17.3096 3.25 18V19C3.25 26.5939 9.40609 32.75 17 32.75V35.25C8.02537 35.25 0.75 27.9746 0.75 19V18C0.75 17.3096 1.30964 16.75 2 16.75Z\", fill: \"url(#paint0_linear_1288_18701)\" }), _jsx(\"defs\", { children: _jsxs(\"linearGradient\", { id: \"paint0_linear_1288_18701\", x1: \"2\", y1: \"19.4884\", x2: \"16.8752\", y2: \"33.7485\", gradientUnits: \"userSpaceOnUse\", children: [_jsx(\"stop\", { stopColor: \"var(--ck-spinner-color)\" }), _jsx(\"stop\", { offset: \"1\", stopColor: \"var(--ck-spinner-color)\", stopOpacity: \"0\" })] }) })] }));\nconst ChainSelectList = ({ variant, }) => {\n    const { connector, chain } = useAccount();\n    const { chains, isPending, switchChain, error } = useSwitchChain();\n    const [pendingChainId, setPendingChainId] = useState(undefined);\n    const locales = useLocales({});\n    const mobile = isMobile();\n    const isError = (error === null || error === void 0 ? void 0 : error['code']) === 4902; // Wallet cannot switch networks\n    const disabled = isError || !switchChain;\n    const handleSwitchNetwork = (chainId) => {\n        if (switchChain) {\n            setPendingChainId(chainId);\n            switchChain({ chainId });\n        }\n    };\n    const { triggerResize } = useContext();\n    return (_jsxs(SwitchNetworksContainer, { style: { marginBottom: switchChain !== undefined ? -8 : 0 }, children: [_jsx(ChainButtonContainer, { children: _jsx(ChainButtons, { children: chains.map((x) => {\n                        var _a;\n                        const c = chainConfigs.find((ch) => ch.id === x.id);\n                        const ch = { ...c, ...x };\n                        return (_jsxs(ChainButton, { \"$variant\": variant, disabled: disabled ||\n                                ch.id === (chain === null || chain === void 0 ? void 0 : chain.id) ||\n                                (isPending && pendingChainId === ch.id), onClick: () => handleSwitchNetwork === null || handleSwitchNetwork === void 0 ? void 0 : handleSwitchNetwork(ch.id), style: {\n                                opacity: disabled && ch.id !== (chain === null || chain === void 0 ? void 0 : chain.id) ? 0.4 : undefined,\n                            }, children: [_jsxs(\"span\", { style: {\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        justifyContent: 'flex-start',\n                                        gap: 12,\n                                        color: ch.id === (chain === null || chain === void 0 ? void 0 : chain.id)\n                                            ? 'var(--ck-dropdown-active-color, inherit)'\n                                            : 'inherit',\n                                    }, children: [_jsxs(ChainLogoContainer, { children: [_jsx(ChainLogoSpinner, { initial: { opacity: 0 }, animate: {\n                                                        opacity: isPending && pendingChainId === ch.id ? 1 : 0,\n                                                    }, transition: {\n                                                        ease: [0.76, 0, 0.24, 1],\n                                                        duration: 0.15,\n                                                        delay: 0.1,\n                                                    }, children: _jsx(motion.div, { animate: \n                                                        // UI fix for Coinbase Wallet on mobile does not remove isPending on rejection event\n                                                        mobile &&\n                                                            isCoinbaseWalletConnector(connector === null || connector === void 0 ? void 0 : connector.id) &&\n                                                            isPending &&\n                                                            pendingChainId === ch.id\n                                                            ? {\n                                                                opacity: [1, 0],\n                                                                transition: { delay: 4, duration: 3 },\n                                                            }\n                                                            : { opacity: 1 }, children: Spinner }, `${ch === null || ch === void 0 ? void 0 : ch.id}-${ch === null || ch === void 0 ? void 0 : ch.name}`) }), _jsx(ChainIcon, { children: (_a = ch.logo) !== null && _a !== void 0 ? _a : _jsx(ChainIcons.UnknownChain, {}) })] }), ch.name] }), variant !== 'secondary' && (_jsx(ChainButtonStatus, { children: _jsxs(AnimatePresence, { initial: false, exitBeforeEnter: true, children: [ch.id === (chain === null || chain === void 0 ? void 0 : chain.id) && (_jsx(motion.span, { style: {\n                                                    color: 'var(--ck-dropdown-active-color, var(--ck-focus-color))',\n                                                    display: 'block',\n                                                    position: 'relative',\n                                                }, initial: { opacity: 0, x: -4 }, animate: { opacity: 1, x: 0 }, exit: {\n                                                    opacity: 0,\n                                                    x: 4,\n                                                    transition: { duration: 0.1, delay: 0 },\n                                                }, transition: {\n                                                    ease: [0.76, 0, 0.24, 1],\n                                                    duration: 0.3,\n                                                    delay: 0.2,\n                                                }, children: locales.connected }, 'connectedText')), isPending && pendingChainId === ch.id && (_jsx(motion.span, { style: {\n                                                    color: 'var(--ck-dropdown-pending-color, inherit)',\n                                                    display: 'block',\n                                                    position: 'relative',\n                                                }, initial: {\n                                                    opacity: 0,\n                                                    x: -4,\n                                                }, animate: { opacity: 1, x: 0 }, exit: { opacity: 0, x: 4 }, transition: {\n                                                    ease: [0.76, 0, 0.24, 1],\n                                                    duration: 0.3,\n                                                    delay: 0.1,\n                                                }, children: _jsx(motion.span, { animate: \n                                                    // UI fix for Coinbase Wallet on mobile does not remove isLoading on rejection event\n                                                    mobile &&\n                                                        isCoinbaseWalletConnector(connector === null || connector === void 0 ? void 0 : connector.id) && {\n                                                        opacity: [1, 0],\n                                                        transition: { delay: 4, duration: 4 },\n                                                    }, children: locales.approveInWallet }) }, 'approveText'))] }) })), variant === 'secondary' ? (_jsx(ChainButtonBg, { initial: false, animate: {\n                                        opacity: ch.id === (chain === null || chain === void 0 ? void 0 : chain.id) ? 1 : 0,\n                                    }, transition: {\n                                        duration: 0.3,\n                                        ease: 'easeOut',\n                                    } })) : (\n                                //hover === ch.name && (\n                                ch.id === (chain === null || chain === void 0 ? void 0 : chain.id) && (_jsx(ChainButtonBg, { layoutId: \"activeChain\", layout: \"position\", transition: {\n                                        duration: 0.3,\n                                        ease: 'easeOut',\n                                    } })))] }, `${ch === null || ch === void 0 ? void 0 : ch.id}-${ch === null || ch === void 0 ? void 0 : ch.name}`));\n                    }) }) }), _jsx(AnimatePresence, { children: isError && (_jsx(motion.div, { initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 }, transition: {\n                        ease: [0.76, 0, 0.24, 1],\n                        duration: 0.3,\n                    }, onAnimationStart: triggerResize, onAnimationComplete: triggerResize, children: _jsx(\"div\", { style: { paddingTop: 10, paddingBottom: 8 }, children: _jsxs(Alert, { children: [locales.warnings_walletSwitchingUnsupported, ' ', locales.warnings_walletSwitchingUnsupportedResolve] }) }) })) })] }));\n};\nexport default ChainSelectList;\n","references":["C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/@types/react/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/wagmi/dist/types/exports/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/constants/chainConfigs.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/ChainSelectList/styles.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/Common/Alert/index.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/node_modules/framer-motion/dist/index.d.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/utils/index.ts","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/assets/chains.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/hooks/useLocales.tsx","C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/src/components/ConnectKit.tsx"],"dts":{"name":"C:/Users/Volcano/Desktop/avo/3rd-party-libraries/connectkit/packages/connectkit/build/components/Common/ChainSelectList/index.d.ts","writeByteOrderMark":false,"text":"declare const ChainSelectList: ({ variant, }: {\n    variant?: \"primary\" | \"secondary\" | undefined;\n}) => import(\"react/jsx-runtime\").JSX.Element;\nexport default ChainSelectList;\n"}}
